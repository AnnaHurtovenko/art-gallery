services:
 redis:
   image: redis:latest
   container_name: redis-cache
   restart: always
   volumes:
   - redis_data:/data
   networks:
     - app_network


 frontend:
   build:
     context: ./frontend
   container_name: frontend
   environment:
      - BACKEND_RDS_URL=http://backend-rds.art-gallery.local:8000/test_connection/
      - BACKEND_REDIS_URL=http://backend-redis.art-gallery.local:8001/test_connection/
   ports:
     - "80:8002"
   depends_on:
     - backend-rds
     - backend-redis
   networks:
     - app_network


 backend-rds:
   build:
     context: ./backend_rds
   container_name: backend-rds
   environment:
     - DB_NAME=artgallery
     - DB_USER=postgres
     - DB_PASSWORD=6152AdU**
     - DB_HOST=artgallery-db.c9a08cyu2yhc.us-east-1.rds.amazonaws.com
     - DB_PORT=5432
     - CORS_ALLOWED_ORIGINS=http://frontend-alb-2106881837.us-east-1.elb.amazonaws.com/
   ports:
     - "8000:8000"
   depends_on:
     - postgres
   networks:
     - app_network
   restart: always
   command: gunicorn --bind 0.0.0.0:8000 backend_rds.wsgi:application


 backend-redis:
   build:
     context: ./backend_redis
   container_name: backend-redis
   environment:
     - REDIS_HOST=redis-cache
     - REDIS_PORT=6379
     - REDIS_DB=0
     - CORS_ALLOWED_ORIGINS=http://frontend-alb-2106881837.us-east-1.elb.amazonaws.com/
   ports:
     - "8001:8001"
   depends_on:
     - redis
   networks:
     - app_network
   restart: always
   command: gunicorn --bind 0.0.0.0:8001 backend_redis.wsgi:application


volumes:
 postgres_data:
 redis_data:


networks:
 app_network:
